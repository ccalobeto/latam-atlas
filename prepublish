#!/bin/bash

rm -rvf files/*.json
rm -rvf build/*
mkdir -p build
mkdir -p build files

# Ecuador - download
if [ ! -f build/nxparroquias.shp ]; then
  curl -ko build/ecuador.zip 'https://www.ecuadorencifras.gob.ec//documentos/web-inec/Cartografia/Clasificador_Geografico/2012/SHP.zip'
  unzip -od build build/ecuador.zip SHP/nxparroquias.shp SHP/nxparroquias.dbf 
  for i in build/SHP/nxparroquias.*; do mv -- "$i" "${i/SHP\/nxparroquias/ecuador}"; done
  rmdir build/SHP
  chmod a-x build/ecuador.*
fi

# # Ecuador - dictionary
shp2json -n build/ecuador.shp \
  | ndjson-map 'd.properties' \
  | json2csv -n > build/dictionary.csv
dictionary="$(iconv -t UTF-8 build/dictionary.csv | awk -F "\"*,\"*" -v OFS=',' '{print $1, $2, $5, $6, $7, $8}' | awk '{gsub(/"/,"")};1')"
echo "$dictionary" > build/dictionary.csv

# # Ecuador - topojson
geo2topo -q 1e5 -n level4=<( \
  mapshaper build/ecuador.shp -proj wgs84 from='+proj=utm +zone=17 +south +datum=WGS84 +units=m +no_defs' -simplify 3% keep-shapes -clean -o \ format=geojson - \
    | ndjson-cat \
    | ndjson-split 'd.features' \
    | ndjson-map '(d.id = d.properties.DPA_PARROQ, delete d.properties, d)') \
  | topomerge level3=level4 -k 'd.id.slice(0, 4)' \
  | topomerge level2=level3 -k 'd.id.slice(0, 2)' \
  | topomerge level1=level2 \
  | node ./properties.js \
> files/ecuador-tm-50k.json #transverse_mercator
  
# Perú - download
if [ ! -f build/peru.shp ]; then
  curl -ko build/peru.zip 'https://www.idep.gob.pe/descargas_CN/limites/distritos.zip'
  unzip build/peru.zip -d build/distritos DISTRITOS.shp DISTRITOS.dbf 
  for file in build/distritos/DISTRITOS.*; do mv -- "$file" "${file/distritos\/DISTRITOS/peru}"; done
  rm -rf build/distritos
  chmod a-x build/peru.*
fi

# Perú - dictionary
shp2json --encoding utf-8 -n build/peru.shp \
  | ndjson-map 'd.properties' \
  | json2csv -n > build/dictionary.csv
dictionary="$(iconv -t UTF-8 build/dictionary.csv | awk -F "\"*,\"*" -v OFS=',' '{print $2, $8, $3$5, $6, $3, $4}' | awk '{gsub(/"/,"")};1')"
echo "$dictionary" > build/dictionary.csv

# Perú - topojson 
geo2topo -q 1e5 -n level4=<( \
  mapshaper build/peru.shp -simplify 3% keep-shapes -clean -o \
  format=geojson - \
    | ndjson-cat \
    | ndjson-split 'd.features' \
    | ndjson-map '(d.id = d.properties.UBIGEO, delete d.properties, d)') \
  | toposimplify -f -s 1e-7 \
  | topomerge level3=level4 -k 'd.id.slice(0, 4)' \
  | topomerge level2=level3 -k 'd.id.slice(0, 2)' \
  | topomerge level1=level2 \
  | node ./properties.js \
> files/peru-100k.json
